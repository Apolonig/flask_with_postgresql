drop table if exists subjects , museums cascade ;

create table subjects (
    id serial primary key,
    name varchar(100) not null,
    region_type varchar(50),
    population int,
    area numeric(10),
    capital varchar(100),
    federal_district varchar(100),
    gdp numeric(12),
    density numeric(10),
    official_language varchar(50)
);

create table  museums (
    id serial primary key,
    name varchar(150) NOT NULL,
    foundation_year int,
    city varchar(100),
    subject_id int references subjects(id) on delete cascade,
    museum_type varchar(100),
    visitors_per_year int,
    area numeric(10),
    ticket_price numeric(5),
    director varchar(100));


insert into subjects (name, region_type, population, area, capital, federal_district, gdp, density, official_language)
values
('Москва', 'Город федерального значения', 12615882, 2561, 'Москва', 'Центральный', 16756.8, 4929.5, 'Русский'),
('Санкт-Петербург', 'Город федерального значения', 5383890, 1439, 'Санкт-Петербург', 'Северо-Западный', 5348.6, 3742, 'Русский'),
('Краснодарский край', 'Край', 5631500, 3393, 'Краснодар', 'Южный', 2345.7, 74.6, 'Русский'),
('Республика Татарстан', 'Республика', 3891300, 67836, 'Казань', 'Приволжский', 2234.3, 57.3, 'Татарский, Русский'),
('Московская область', 'Область', 7635653, 44897, 'Красногорск', 'Центральный', 3126.5, 170.2, 'Русский'),
('Свердловская область', 'Область', 4323481, 194307, 'Екатеринбург', 'Уральский', 2154.6, 22.2, 'Русский'),
('Новосибирская область', 'Область', 2786669, 177756, 'Новосибирск', 'Сибирский', 1234.4, 15.7, 'Русский'),
('Приморский край', 'Край', 1912170, 164673, 'Владивосток', 'Дальневосточный', 987.2, 11.6, 'Русский'),
('Республика Башкортостан', 'Республика', 4076000, 142947, 'Уфа', 'Приволжский', 1536.7, 28.5, 'Башкирский, Русский'),
('Ростовская область', 'Область', 4226100, 100967, 'Ростов-на-Дону', 'Южный', 1934.5, 41.9, 'Русский');



insert into museums (name, foundation_year, city, subject_id, museum_type, visitors_per_year, area, ticket_price, director)
values
('Государственный Эрмитаж', 1764, 'Санкт-Петербург', 2, 'Художественный', 4800000, 233345, 500, 'М. Пиотровский'),
('Третьяковская галерея', 1856, 'Москва', 1, 'Художественный', 2000000, 73000, 400, 'З. Трегулова'),
('Государственный Русский музей', 1895, 'Санкт-Петербург', 2, 'Художественный', 3500000, 100000, 450, 'В. Гусев'),
('Музей Космонавтики', 1981, 'Москва', 1, 'Исторический', 700000, 8500, 250, 'А. Мельниченко'),
('Музей изобразительных искусств', 518	, 'Казань', 4, 'Художественный', 120000, 5000, 200, 'Т. Валеева'),
('Краснодарский краевой художественный музей', 1904, 'Краснодар', 3, 'Художественный', 110000, 4000, 200, 'Т. Ткаченко'),
('Свердловский областной краеведческий музей', 1870, 'Екатеринбург', 6, 'Исторический', 230000, 6000, 300, 'А. Карачевская'),
('Новосибирский государственный художественный музей', 1958, 'Новосибирск', 7, 'Художественный', 180000, 7000, 250, 'А. Бочков'),
('Музей истории Приморья', 1992, 'Владивосток', 8, 'Исторический', 90000, 3000, 150, 'Е. Седова'),
('Башкирский государственный художественный музей', 1921, 'Уфа', 9, 'Художественный', 100000, 5500, 220, 'Р. Ахметов'),
('Ростовский областной музей краеведения', 1937, 'Ростов-на-Дону', 10, 'Исторический', 150000, 9000, 180, 'И. Долгодворов'),
('Национальный музей Республики Татарстан', 2005, 'Казань', 4, 'Исторический', 400000, 15000, 250, 'И. Низамов'),
('Краснодарский музей-заповедник', 2011, 'Краснодар', 3, 'Исторический', 300000, 8000, 200, 'А. Середа'),
('Екатеринбургский музей изобразительных искусств', 1936, 'Екатеринбург', 6, 'Художественный', 250000, 6000, 200, 'О. Кихтенко'),
('Музей иностранных культур', 2002, 'Санкт-Петербург', 2, 'Культурный', 100000, 5000, 300, 'С. Громова'),
('Музей истории города Краснодара', 2010, 'Краснодар', 3, 'Исторический', 70000, 3000, 150, 'Л. Истомин'),
('Ростовский областной музей изобразительных искусств', 1938, 'Ростов-на-Дону', 10, 'Художественный', 200000, 5000, 180, 'В. Кузьмин'),
('Музей железных дорог России', 2010, 'Санкт-Петербург', 2, 'Технический', 150000, 8000, 250, 'А. Романов'),
('Республиканский музей краеведения', 1991, 'Казань', 4, 'Исторический', 60000, 2000, 100, 'Р. Габдулина'),
('Музей памятников истории и культуры', 1989, 'Уфа', 9, 'Исторический', 120000, 5000, 150, 'С. Ахметшин'),
('Музей геологии и полезных ископаемых', 1995, 'Екатеринбург', 6, 'Научный', 75000, 3000, 120, 'Д. Кошкин'),
('Музей истории и культуры Сибири', 2008, 'Новосибирск', 7, 'Исторический', 90000, 4000, 180, 'Л. Боброва'),
('Мемориальный музей А. С. Пушкина', 2003, 'Москва', 1, 'Литературный', 300000, 5000, 200, 'Е. Жукова'),
('Государственный музей изобразительных искусств имени А.С. Пушкина', 1912, 'Москва', 1, 'Изобразительное искусство', 1000000, 15000.50, 500, 'М. Лысенко'),
('Московский исторический музей', 1872, 'Москва', 2, 'История', 600000, 8000.75, 300, 'С. Иванов');

create view museums_with_subjects as
select 
    museums.name as museum_name,
    museums.foundation_year,
    museums.city,
    museums.museum_type,
    museums.visitors_per_year,
    museums.area as museum_area,
    museums.ticket_price,
    museums.director,
    subjects.name as subject_name,
    subjects.region_type,
    subjects.population,
    subjects.area as subject_area,
    subjects.capital,
    subjects.federal_district,
    subjects.gdp,
    subjects.density,
    subjects.official_language
from museums
join subjects on museums.subject_id = subjects.id
order by museums.city desc;




create or replace function get_museums_by_region(p_region_name varchar)
returns table(
    museum_name varchar,
    foundation_year int,
    city varchar,
    museum_type varchar,
    visitors_per_year int,
    area numeric(10),
    ticket_price numeric(5),
    director varchar
) as $$
begin
    return query
    select m.name, m.foundation_year, m.city, m.museum_type, m.visitors_per_year, m.area, m.ticket_price, m.director
    from museums m
    join subjects s on m.subject_id = s.id
    where s.name = p_region_name;
end;

$$ language plpgsql;


create or replace function count_museums_by_region(p_region_name varchar)
returns int as $$
declare
    museum_count int;
begin
    select count(*) into museum_count
    from museums m
    join subjects s on m.subject_id = s.id
    where s.name = p_region_name;

    RETURN coalesce(museum_count, 0);
end;
$$ language plpgsql;


--SELECT count_museums_by_region('Москва');

create or replace function notify_museum_count()
returns trigger as $$
declare
    museum_count int;
begin
    
    select count(*) into museum_count
    from museums m
    join subjects s on m.subject_id = s.id
    where s.id = new.subject_id;

    raise notice 'В субъекте % стало % музеев', (select name from subjects where id = new.subject_id), museum_count;

    return new;
end;
$$ language plpgsql;


drop trigger if exists after_insert_museum on museums;

create trigger after_insert_museum
after insert on museums
for each row
execute function notify_museum_count();

/*INSERT INTO museums (name, subject_id, visitors_per_year, ticket_price)
VALUES ('Новый музей', 1, 1000, 150.0);*/

create or replace function validate_museum_data()
returns trigger as $$
begin
    if new.visitors_per_year < 0 then
        raise exception 'Количество посетителей не может быть отрицательным для музея %', new.name;
    end if;

    if new.ticket_price < 0 then
        raise exception 'Цена билета не может быть отрицательной для музея %', new.name;
    end if;

    return new;
end;
$$ language plpgsql;

drop trigger if exists validate_museum_before_insert_update on museums;

create trigger validate_museum_before_insert_update
before insert or update on museums
for each row 
execute function validate_museum_data();

/*
update museums
set visitors_per_year = -500
where id = 1;
*/

/*
update museums
set visitors_per_year = 1200, ticket_price = 200.0
where id = 1;
*/

/*
insert into museums (name, subject_id, visitors_per_year, ticket_price)
values ('Еще один музей', 2, 500, -50.0);
*/

